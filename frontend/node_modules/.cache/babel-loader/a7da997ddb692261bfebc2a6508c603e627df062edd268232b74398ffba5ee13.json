{"ast":null,"code":"var _jsxFileName = \"/home/jagadeshronanki/projects/PropertyRegistration/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState < ethers.providers.Web3Provider | null > null;\n  const [address, setAddress] = useState < string > '';\n  useEffect(() => {\n    async function init() {\n      // Check if MetaMask is installed\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n        try {\n          // Request access to the user's MetaMask account\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n\n          // Get the current account address\n          const accounts = await provider.listAccounts();\n          setAddress(accounts[0]);\n\n          // Listen for changes to the current account\n          window.ethereum.on('accountsChanged', accounts => {\n            setAddress(accounts[0]);\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    init();\n  }, []);\n  function handleConnectWallet() {\n    window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }).then(accounts => {\n      setAddress(accounts[0]);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-bold\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), address ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Connected Account: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","jsxDEV","_jsxDEV","App","_s","provider","setProvider","providers","Web3Provider","address","setAddress","string","init","window","ethereum","request","method","accounts","listAccounts","on","error","console","handleConnectWallet","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jagadeshronanki/projects/PropertyRegistration/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\nfunction App() {\n  const [provider, setProvider] = useState<ethers.providers.Web3Provider | null>(null);\n  const [address, setAddress] = useState<string>('');\n\n  useEffect(() => {\n    async function init() {\n      // Check if MetaMask is installed\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n\n        try {\n          // Request access to the user's MetaMask account\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n          // Get the current account address\n          const accounts = await provider.listAccounts();\n          setAddress(accounts[0]);\n\n          // Listen for changes to the current account\n          window.ethereum.on('accountsChanged', (accounts) => {\n            setAddress(accounts[0]);\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n\n    init();\n  }, []);\n\n  function handleConnectWallet() {\n    window.ethereum.request({ method: 'eth_requestAccounts' }).then((accounts) => {\n      setAddress(accounts[0]);\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='text-bold'>Home Page</h1>\n      {address ? (\n        <div>Connected Account: {address}</div>\n      ) : (\n        <button onClick={handleConnectWallet}>Connect Wallet</button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,GAACE,MAAM,CAACO,SAAS,CAACC,YAAY,GAAG,IAAI,GAAE,IAAK;EACpF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,GAACa,MAAM,GAAE,EAAG;EAElDZ,SAAS,CAAC,MAAM;IACd,eAAea,IAAIA,CAAA,EAAG;MACpB;MACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMT,QAAQ,GAAG,IAAIL,MAAM,CAACO,SAAS,CAACC,YAAY,CAACK,MAAM,CAACC,QAAQ,CAAC;QACnER,WAAW,CAACD,QAAQ,CAAC;QAErB,IAAI;UACF;UACA,MAAMQ,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;;UAEhE;UACA,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,YAAY,CAAC,CAAC;UAC9CR,UAAU,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;;UAEvB;UACAJ,MAAM,CAACC,QAAQ,CAACK,EAAE,CAAC,iBAAiB,EAAGF,QAAQ,IAAK;YAClDP,UAAU,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;UACzB,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF;IACF;IAEAR,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,SAASU,mBAAmBA,CAAA,EAAG;IAC7BT,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC,CAACO,IAAI,CAAEN,QAAQ,IAAK;MAC5EP,UAAU,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAACO,KAAK,CAAEJ,KAAK,IAAK;MAClBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;EAEA,oBACElB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA;MAAIuB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvCrB,OAAO,gBACNP,OAAA;MAAAwB,QAAA,GAAK,qBAAmB,EAACjB,OAAO;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEvC5B,OAAA;MAAQ6B,OAAO,EAAET,mBAAoB;MAAAI,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC7D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAlDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}