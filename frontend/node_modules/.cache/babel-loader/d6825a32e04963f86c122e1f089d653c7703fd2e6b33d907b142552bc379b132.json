{"ast":null,"code":"var _jsxFileName = \"/home/jagadeshronanki/projects/PropertyRegistration/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport PropertyRecords from './abis/PropertyRecords.json';\nimport { Page1 } from './pages/Page1.js';\nimport { Page2 } from './pages/Page2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [address, setAddress] = useState('');\n  const [owner, setOwner] = useState('');\n  useEffect(() => {\n    async function init() {\n      // Check if MetaMask is installed\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n        try {\n          // Request access to the user's MetaMask account\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n\n          // Get the current account address\n          const accounts = await provider.listAccounts();\n          setAddress(accounts[0]);\n\n          // set owner\n          setOwner(accounts[0]);\n\n          // Listen for changes to the current account\n          window.ethereum.on('accountsChanged', accounts => {\n            setAddress(accounts[0]);\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    init();\n  }, []);\n  useEffect(() => {\n    console.log(`Current account: ${address}`);\n    setAddress(address);\n  }, [address]);\n  function handleConnectWallet() {\n    window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }).then(accounts => {\n      setAddress(accounts[0]);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl p-5 font-bold\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), address ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-bold\",\n      children: [\"Connected Account: \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleConnectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), address && address === owner ? /*#__PURE__*/_jsxDEV(Page1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rKwEdlIlnk7QVrkVDB8a29nBOK0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","PropertyRecords","Page1","Page2","jsxDEV","_jsxDEV","App","_s","provider","setProvider","address","setAddress","owner","setOwner","init","window","ethereum","providers","Web3Provider","request","method","accounts","listAccounts","on","error","console","log","handleConnectWallet","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jagadeshronanki/projects/PropertyRegistration/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css'\nimport PropertyRecords from './abis/PropertyRecords.json'\nimport {Page1} from './pages/Page1.js';\nimport {Page2} from './pages/Page2';\n\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [address, setAddress] = useState('');\n  const [owner, setOwner] = useState('');\n\n  useEffect(() => {\n    async function init() {\n      // Check if MetaMask is installed\n      if (window.ethereum) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n\n        try {\n          // Request access to the user's MetaMask account\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n          // Get the current account address\n          const accounts = await provider.listAccounts();\n          setAddress(accounts[0]);\n\n          // set owner\n          setOwner(accounts[0])\n\n          // Listen for changes to the current account\n          window.ethereum.on('accountsChanged', (accounts) => {\n            setAddress(accounts[0]);\n          });\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    console.log(`Current account: ${address}`);\n    setAddress(address)\n  }, [address]);\n\n  function handleConnectWallet() {\n    window.ethereum.request({ method: 'eth_requestAccounts' }).then((accounts) => {\n      setAddress(accounts[0]);\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='text-3xl p-5 font-bold'>Home Page</h1>\n      {address ? (\n        <div className='font-bold'>Connected Account: {address}</div>\n      ) : (\n        <button className=\"button\" onClick={handleConnectWallet}>Connect Wallet</button>\n      )}\n      {address && address === owner ? (\n        <Page1 />\n      ) : (\n        <Page2 />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}